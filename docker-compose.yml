# Возможно, такая конфигурация докера простовата и где-то не соответствует концепции "под всё один контейнер".
# Но тот же Laravel Sail внутри это просто убунта на которую установлено всё-всё-всё и bash-файл.
# Всё равно реальный деплой этого приложения будет не через докер, а через Laravel Forge
# или Ploi.io, которые возьмут всю настройку окружения продакшена на себя.
# Поэтому пусть всё будет настолько просто, насколько возможно, но не проще.

version: "3.8"

services:
  phormally:
    container_name: app
    build:
      args:
        user: phorma
        uid: 1000
      context: ./docker
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - 8999:80
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - phormally
  db:
    container_name: db
    image: postgres:14.6
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./docker/dbdata:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:7.0.7-alpine3.17
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - ./docker/redisdata:/data
  
  # К сожалению, в докерхабе нет версии под Apple Silicon
  # Придётся билдить, извините за 300MB Go
  # Нужно будет потом залить на докер версию под arm
  # Искать другой сервис пока не буду - у этого же кабан на лого
  mailhog:
    container_name: mailhog
    build:
      context: ./docker/mailhog
      dockerfile: mailhog.dockerfile
    restart: unless-stopped
    ports:
      - 1025:1025 # Думаю, пригодится для тестирования работы Mailhog
      - 8025:8025 # Mailhog UI
    environment:
      # ! TODO: определить, куда Mailhog сохраняет письма и подключить как volume
      MH_STORAGE: maildir
  node:
    container_name: node
    image: node:lts
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 5173:5173